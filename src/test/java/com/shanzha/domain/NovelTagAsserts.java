package com.shanzha.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NovelTagAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelTagAllPropertiesEquals(NovelTag expected, NovelTag actual) {
        assertNovelTagAutoGeneratedPropertiesEquals(expected, actual);
        assertNovelTagAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelTagAllUpdatablePropertiesEquals(NovelTag expected, NovelTag actual) {
        assertNovelTagUpdatableFieldsEquals(expected, actual);
        assertNovelTagUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelTagAutoGeneratedPropertiesEquals(NovelTag expected, NovelTag actual) {
        assertThat(actual)
            .as("Verify NovelTag auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelTagUpdatableFieldsEquals(NovelTag expected, NovelTag actual) {
        assertThat(actual)
            .as("Verify NovelTag relevant properties")
            .satisfies(a -> assertThat(a.getTagId()).as("check tagId").isEqualTo(expected.getTagId()))
            .satisfies(a -> assertThat(a.getTagName()).as("check tagName").isEqualTo(expected.getTagName()))
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()))
            .satisfies(a -> assertThat(a.getIsHot()).as("check isHot").isEqualTo(expected.getIsHot()))
            .satisfies(a -> assertThat(a.getCreateTime()).as("check createTime").isEqualTo(expected.getCreateTime()))
            .satisfies(a -> assertThat(a.getUpdateTime()).as("check updateTime").isEqualTo(expected.getUpdateTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelTagUpdatableRelationshipsEquals(NovelTag expected, NovelTag actual) {
        // empty method
    }
}
