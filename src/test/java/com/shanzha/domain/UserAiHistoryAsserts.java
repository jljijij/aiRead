package com.shanzha.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserAiHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAiHistoryAllPropertiesEquals(UserAiHistory expected, UserAiHistory actual) {
        assertUserAiHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertUserAiHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAiHistoryAllUpdatablePropertiesEquals(UserAiHistory expected, UserAiHistory actual) {
        assertUserAiHistoryUpdatableFieldsEquals(expected, actual);
        assertUserAiHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAiHistoryAutoGeneratedPropertiesEquals(UserAiHistory expected, UserAiHistory actual) {
        assertThat(actual)
            .as("Verify UserAiHistory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAiHistoryUpdatableFieldsEquals(UserAiHistory expected, UserAiHistory actual) {
        assertThat(actual)
            .as("Verify UserAiHistory relevant properties")
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getQuestion()).as("check question").isEqualTo(expected.getQuestion()))
            .satisfies(a -> assertThat(a.getAnswer()).as("check answer").isEqualTo(expected.getAnswer()))
            .satisfies(a -> assertThat(a.getChatId()).as("check chatId").isEqualTo(expected.getChatId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAiHistoryUpdatableRelationshipsEquals(UserAiHistory expected, UserAiHistory actual) {
        // empty method
    }
}
