package com.shanzha.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserCouponAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserCouponAllPropertiesEquals(UserCoupon expected, UserCoupon actual) {
        assertUserCouponAutoGeneratedPropertiesEquals(expected, actual);
        assertUserCouponAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserCouponAllUpdatablePropertiesEquals(UserCoupon expected, UserCoupon actual) {
        assertUserCouponUpdatableFieldsEquals(expected, actual);
        assertUserCouponUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserCouponAutoGeneratedPropertiesEquals(UserCoupon expected, UserCoupon actual) {
        assertThat(actual)
            .as("Verify UserCoupon auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserCouponUpdatableFieldsEquals(UserCoupon expected, UserCoupon actual) {
        assertThat(actual)
            .as("Verify UserCoupon relevant properties")
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getCouponId()).as("check couponId").isEqualTo(expected.getCouponId()))
            .satisfies(a -> assertThat(a.getUsedAt()).as("check usedAt").isEqualTo(expected.getUsedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserCouponUpdatableRelationshipsEquals(UserCoupon expected, UserCoupon actual) {
        // empty method
    }
}
